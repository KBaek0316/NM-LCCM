a
install.packages("dplyr")
library(dplyr)
a<-read.table("clipboard",sep="\t",header=TRUE)
View(a)
a$Date<-as.Date(a$Date)
View(a)
a<-read.table("clipboard",sep="\t",header=TRUE)
View(a)
a$Date<-as.Date(a$Date,format = "%m/%d/%y")
View(a)
a<-read.table("clipboard",sep="\t",header=TRUE)
a$Date<-as.Date(a$Date,format = "%m/%d/%Y")
View(a)
format(a$Date,"%m")
a$Mon<-format(a$Date,"%m")
weekdays(as.Date(a$date)
weekdays(a$Date)
a$Day1<-weekdays(a$Date)
library(dplyr)
a %>% group_by(Mon) %>% summarize(a=sum(Raw))
a %>% group_by(Day1) %>% summarize(a=sum(Raw))
cc<-a %>% group_by(Mon) %>% summarize(a=sum(Raw))
cc
cc[3:5,2]
sum(cc[3:5,2])
sum(cc[6:8,2])
sum(cc[9:11,2])
sum(cc[c(12,1,2),2])
cc[c(12,1,2),]
a$yr<-format(a$Date,"%Y")
a$Mon2<-as.integer(a$Mon)
a %>% filter(Date>'2018-06-30' & Date<'2023-08-01')%>%  group_by(Mon) %>% summarize(a=sum(Raw))
cc<-a %>% filter(Date>'2018-06-30' & Date<'2023-08-01')%>%  group_by(Mon) %>% summarize(a=sum(Raw))
sum(cc[3:5,2])
sum(cc[6:8,2])
sum(cc[9:11,2])
sum(cc[c(12,1,2),2])
show_col(viridis_pal()(20))
library(scales)
show_col(viridis_pal()(20))
show_col(viridis_pal()(5))
show_col(viridis(4))
library(ggplot2)
show_col(viridis(4))
library(viridis)
show_col(viridis(4))
aa<-read.table("clipboard",sep="\t",header=TRUE)
View(aa)
summary(as.factor(aa))/15568
summary(as.factor(aa$work_location))/15568
sum(summary(as.factor(aa))/15568)
sum(summary(as.factor(aa$work_location))/15568)
View(aa)
update.packages(c("ggplot2"))
install.pacakges("ggplot2")
install.packages("ggplot2")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(dplyr) # but you have to load the packages for each R Session
library(mlogit)
library(ggplot2)
library(ggpattern)
install.packages(c("backports", "BH", "broom", "broom.helpers", "bslib", "cli", "colorspace", "crayon", "curl", "data.table", "DBI", "digest", "distributional", "evaluate", "fable", "fabletools", "farver", "feasts", "gbm", "ggfortify", "ggrepel", "ggstats", "glue", "gtable", "highr", "knitr", "labelled", "lemon", "munsell", "osrm", "Rcpp", "RcppSimdJson", "rlang", "rpart.plot", "rstudioapi", "s2", "sf", "stringi", "tidyr", "tidyselect", "timechange", "tinytex", "tsibble", "urca", "withr", "wk", "xfun", "xgboost", "yaml"))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(dplyr) # but you have to load the packages for each R Session
library(mlogit)
library(ggplot2)
library(ggpattern)
df<-read.csv("./Results/TRB1/dfMNL_ivadj.csv",header=TRUE)
df$id<-as.character(df$id)
df$mode=ifelse(df$tway==1,"Tway","Non")
dfNNLCCM<-read.csv("./Results/TRB1/modelout_ivadj_auxwtivntranst.csv",header=TRUE)
dfNNLCCM[is.na(as.numeric(dfNNLCCM[,1])),c('tr')]<-NA
trid<-dfNNLCCM[dfNNLCCM$tr==1,1] #first col: X = header
trid<-trid[!is.na(trid)]
tsid<-dfNNLCCM[dfNNLCCM$tr==0,1]
tsid<-tsid[!is.na(tsid)]
dfm<-mlogit.data(df,shape="long",choice="match",alt.var="mode")
mymodel<-mlogit(match~aux+wt+iv+nTrans,dfm[dfm$id %in% trid,])
summary(mymodel)
tspred<-predict(mymodel,newdata=dfm[dfm$id %in% tsid,])
tsy<-matrix(df[df$id %in% tsid,c('match')],ncol=2,byrow=TRUE,dimnames=list(c(tsid),c('Non','Tway')))
print(1-(sum(tsy*log(tspred))/sum(tsy*log(c(mean(tsy[,1]),mean(tsy[,2])))))) #rhosq
mymodel2<-mlogit(match~ov+iv+nTrans,dfm[dfm$id %in% trid,])
summary(mymodel2)
tspred<-predict(mymodel2,newdata=dfm[dfm$id %in% tsid,])
tsy<-matrix(df[df$id %in% tsid,c('match')],ncol=2,byrow=TRUE,dimnames=list(c(tsid),c('Non','Tway')))
print(1-(sum(tsy*log(tspred))/sum(tsy*log(c(mean(tsy[,1]),mean(tsy[,2])))))) #rhosq
dfNNLCCM2<-read.csv("./Results/TRB1/modelout_ivadj_ovivntrans.csv",header=TRUE)
dfNNLCCM2[is.na(as.numeric(dfNNLCCM2[,1])),c('tr')]<-NA
infomat<-dfNNLCCM[is.na(dfNNLCCM$tr),2:(ncol(dfNNLCCM)-1)]
row.names(infomat)<-dfNNLCCM[is.na(dfNNLCCM$tr),1]
apply(infomat,1,mean)
apply(infomat,1,sd)
infomat[,which(infomat[2,]==max(infomat[2,]))] #max rho_ts
infomat2<-dfNNLCCM2[is.na(dfNNLCCM2$tr),2:(ncol(dfNNLCCM2)-1)]
row.names(infomat2)<-dfNNLCCM2[is.na(dfNNLCCM2$tr),1]
#infomat2<-infomat2[,which(infomat2[2,]>=quantile(t(infomat2[2,]), 2/3))]
memmat2<-dfNNLCCM2[!is.na(dfNNLCCM2$tr),2:(ncol(dfNNLCCM2)-1)]
apply(infomat2,1,mean)
apply(infomat2,1,sd)
infomat2[,which(infomat2[2,]==max(infomat2[2,]))] #best model
mean(round(memmat2[,which(infomat2[2,]==max(infomat2[2,]))])) #Class1 membership prop of best model
#round(memmat2[,which(infomat2[2,]==max(infomat2[2,]))]) #class assignments of best model
df2<-df %>% filter(match==1) %>% select(-realDep,-routes,-mode,-id,-match)
df2$aclass<-round(apply(memmat2,1,mean))
df2$iv<--1*df2$iv
df2[df2$aclass==0,c('aclass')]<-2
df2$aclass<-as.factor(df2$aclass)
summary(df2$aclass)
df2<-df2 %>% select(aclass,everything())
#dfsummary<-df2 %>% group_by(aclass) %>% summarize_all(list(mean=mean,sd=sd))
dfmean<-df2 %>% group_by(aclass) %>% summarize_all(mean)
dfmean$aclass<-paste0('mean_',dfmean$aclass)
dfsd<-df2 %>% group_by(aclass) %>% summarize_all(sd)
dfsd$aclass<-paste0('sd_',dfsd$aclass)
dfstore<-dfmean
dfstore[]<-NA
dfstore[,1]<-c("tstat",'Pval')
dffin<-read.csv("./Results/TRB1/bymodels.csv",header=TRUE)
plotvars<-c("dayofweek_Weekday","realtime","visitor","purpose_HBW","purpose_HBEd","choicerider_choicerider","worktype_fullO","worktype_fullT","worktype_partialT")
dfnames<-data.frame(var=plotvars,variables=c("Weekday","Real Time\nInfo User","Twin Cities\nVisitor","Home Based\nWork Trip","Home Based\nSchool Trip","Transit\nChoice Rider","Full\nOffice Worker","Full\nTeleworker","Hybrid\nTeleworker"))
dfnames$variables<-factor(dfnames$variables,levels=c("Weekday","Real Time\nInfo User","Twin Cities\nVisitor","Home Based\nWork Trip","Home Based\nSchool Trip","Transit\nChoice Rider","Full\nOffice Worker","Full\nTeleworker","Hybrid\nTeleworker"))
dfplot<-dffin[dffin$var %in% plotvars,]
dfplot<-left_join(dfplot,dfnames,by="var")
dfplot$AssignedClass<-"Class 1: More likely\nto use Transitway"
dfplot[dfplot$aclass==2,"AssignedClass"]<-"Class 2: Less likely\nto use Transitway"
#dfplot$AssignedClass<-factor(paste0("Class ",dfplot$aclass))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot(aes(fill=AssignedClass))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
scale_pattern_manual(values= c("crosshatch","stripe"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
scale_pattern_manual(values= c("crosshatch","stripe"))+
geom_boxplot(aes(fill=AssignedClass))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
scale_pattern_fill_manual(values= c("crosshatch","stripe"))+
geom_boxplot(aes(fill=AssignedClass))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass, pattern_fill=AssignedClass))+
scale_pattern_manual(values= c("crosshatch","stripe"))+
scale_pattern_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass, pattern_fill=AssignedClass))+
scale_pattern_manual(values= c("crosshatch","stripe"),pattern_spacing=0.02)+
scale_pattern_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass, pattern_fill=AssignedClass))+
scale_pattern_manual(values= c("crosshatch","stripe",pattern_spacing=0.02))+
scale_pattern_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass, pattern_fill=AssignedClass,pattern_spacing=0.02))+
scale_pattern_manual(values= c("crosshatch","stripe"))+
scale_pattern_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass, pattern_fill=AssignedClass),pattern_spacing=0.02)+
scale_pattern_manual(values= c("crosshatch","pch"))+
scale_pattern_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass, pattern_fill=AssignedClass,fill=AssignedClass),pattern_spacing=0.01)+
scale_pattern_manual(values= c("crosshatch","pch"))+
scale_pattern_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass,fill=AssignedClass),pattern_spacing=0.01)+
scale_pattern_manual(values= c("crosshatch","pch"))+
scale_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass,fill=AssignedClass),pattern_spacing=0.01)+
scale_pattern_manual(values= c("none","pch"))+
scale_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass,fill=AssignedClass),pattern_spacing=0.01)+
scale_pattern_manual(values= c("none","pch"))+
scale_pattern_fill_manual(values= c("#FFFFFF","#FFFFFF"))+
scale_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass,fill=AssignedClass),pattern_spacing=0.01,pattern_density=0.4)+
scale_pattern_manual(values= c("none","pch"))+
scale_fill_manual(values= c("#4E95D9","#F2AA84"))
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass,fill=AssignedClass),pattern_spacing=0.01,pattern_density=0.4)+
scale_pattern_manual(values= c("none","pch"))+
scale_fill_manual(values= c("#4E95D9","#F2AA84"))+
theme(legend.position = c(0.99, .99), legend.justification = c(1, 1),
legend.background = element_blank(),legend.key = element_blank(),
legend.margin = margin(),legend.spacing = unit(0, "cm"),
legend.text = element_text(size=9),
legend.key.width= unit(.5, 'cm'),legend.key.height= unit(.5, 'cm'),)
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass,fill=AssignedClass),pattern_spacing=0.01,pattern_density=0.4)+
scale_pattern_manual(values= c("none","pch"))+
scale_fill_manual(values= c("#4E95D9","#F2AA84"))+
theme(legend.position = c(0.99, .99), legend.justification = c(1, 1),
legend.key = element_blank(),
legend.key.width= unit(.5, 'cm'),legend.key.height= unit(.5, 'cm'),)
ggsave("./Results/TRB1/dist.png",width=6,height=3,units="in",dpi=300)
ggplot(dfplot,aes(y=variables,x=meanval))+ylab("Variables")+
xlab("Each Class's Composition of People of the Variable Being Inspected")+
geom_boxplot_pattern(aes(pattern=AssignedClass,fill=AssignedClass),pattern_spacing=0.01,pattern_density=0.4)+
scale_pattern_manual(values= c("none","pch"))+
scale_fill_manual(values= c("#4E95D9","#F2AA84"))+
theme(legend.position = c(0.99, .99), legend.justification = c(1, 1),
legend.key = element_blank(),
legend.key.width= unit(.5, 'cm'),legend.key.height= unit(.5, 'cm'),)
ggsave("./Results/TRB1/dist.png",width=9,height=6,units="in",dpi=300)
ggsave("./Results/TRB1/dist.png",width=6.5,height=4.5,units="in",dpi=300)
